// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: extend/mock/options/annotations.proto

package pboptions

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// protoc-gen-mock的File
type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value 值
	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty" xorm:"varchar(255) unsigned not null default '' 'Value'"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extend_mock_options_annotations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_extend_mock_options_annotations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_extend_mock_options_annotations_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// protoc-gen-mock的Method
type Method struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value 值
	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty" xorm:"varchar(255) unsigned not null default '' 'Value'"`
}

func (x *Method) Reset() {
	*x = Method{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extend_mock_options_annotations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Method) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Method) ProtoMessage() {}

func (x *Method) ProtoReflect() protoreflect.Message {
	mi := &file_extend_mock_options_annotations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Method.ProtoReflect.Descriptor instead.
func (*Method) Descriptor() ([]byte, []int) {
	return file_extend_mock_options_annotations_proto_rawDescGZIP(), []int{1}
}

func (x *Method) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// protoc-gen-mock的Message
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value 值
	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty" xorm:"varchar(255) unsigned not null default '' 'Value'"`
	// IsMock mock选项
	IsMock bool `protobuf:"varint,2,opt,name=IsMock,proto3" json:"IsMock,omitempty" xorm:"tinyint unsigned not null default 0 'IsMock'"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extend_mock_options_annotations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_extend_mock_options_annotations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_extend_mock_options_annotations_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Message) GetIsMock() bool {
	if x != nil {
		return x.IsMock
	}
	return false
}

// protoc-gen-mock的service
type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty" xorm:"varchar(255) unsigned not null default '' 'Value'"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extend_mock_options_annotations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_extend_mock_options_annotations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_extend_mock_options_annotations_proto_rawDescGZIP(), []int{3}
}

func (x *Service) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// protoc-gen-mock 的service
type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty" xorm:"varchar(255) unsigned not null default '' 'Value'"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extend_mock_options_annotations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_extend_mock_options_annotations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_extend_mock_options_annotations_proto_rawDescGZIP(), []int{4}
}

func (x *Field) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var file_extend_mock_options_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*File)(nil),
		Field:         5001,
		Name:          "Extend.Mock.Options.file",
		Tag:           "bytes,5001,opt,name=file",
		Filename:      "extend/mock/options/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*Method)(nil),
		Field:         5001,
		Name:          "Extend.Mock.Options.method",
		Tag:           "bytes,5001,opt,name=method",
		Filename:      "extend/mock/options/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*Message)(nil),
		Field:         5001,
		Name:          "Extend.Mock.Options.message",
		Tag:           "bytes,5001,opt,name=message",
		Filename:      "extend/mock/options/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*Service)(nil),
		Field:         5001,
		Name:          "Extend.Mock.Options.service",
		Tag:           "bytes,5001,opt,name=service",
		Filename:      "extend/mock/options/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*Field)(nil),
		Field:         5001,
		Name:          "Extend.Mock.Options.field",
		Tag:           "bytes,5001,opt,name=field",
		Filename:      "extend/mock/options/annotations.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional Extend.Mock.Options.File file = 5001;
	E_File = &file_extend_mock_options_annotations_proto_extTypes[0]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional Extend.Mock.Options.Method method = 5001;
	E_Method = &file_extend_mock_options_annotations_proto_extTypes[1]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional Extend.Mock.Options.Message message = 5001;
	E_Message = &file_extend_mock_options_annotations_proto_extTypes[2]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional Extend.Mock.Options.Service service = 5001;
	E_Service = &file_extend_mock_options_annotations_proto_extTypes[3]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional Extend.Mock.Options.Field field = 5001;
	E_Field = &file_extend_mock_options_annotations_proto_extTypes[4]
)

var File_extend_mock_options_annotations_proto protoreflect.FileDescriptor

var file_extend_mock_options_annotations_proto_rawDesc = []byte{
	0x0a, 0x25, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e,
	0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x4d, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49,
	0x73, 0x4d, 0x6f, 0x63, 0x6b, 0x22, 0x1f, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x4c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x89, 0x27, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x4d, 0x6f, 0x63, 0x6b,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x3a, 0x54, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x89, 0x27,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x4d, 0x6f,
	0x63, 0x6b, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x58, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x89, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x3a, 0x58, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x89, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e,
	0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x50, 0x0a,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x89, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x42,
	0x51, 0x5a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x70, 0x62, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x2f, 0x70,
	0x62, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b, 0x70, 0x62, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0xf8, 0x01, 0x01, 0xaa, 0x02, 0x1a, 0x5a, 0x77, 0x77, 0x78, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_extend_mock_options_annotations_proto_rawDescOnce sync.Once
	file_extend_mock_options_annotations_proto_rawDescData = file_extend_mock_options_annotations_proto_rawDesc
)

func file_extend_mock_options_annotations_proto_rawDescGZIP() []byte {
	file_extend_mock_options_annotations_proto_rawDescOnce.Do(func() {
		file_extend_mock_options_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(file_extend_mock_options_annotations_proto_rawDescData)
	})
	return file_extend_mock_options_annotations_proto_rawDescData
}

var file_extend_mock_options_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_extend_mock_options_annotations_proto_goTypes = []interface{}{
	(*File)(nil),                        // 0: Extend.Mock.Options.File
	(*Method)(nil),                      // 1: Extend.Mock.Options.Method
	(*Message)(nil),                     // 2: Extend.Mock.Options.Message
	(*Service)(nil),                     // 3: Extend.Mock.Options.Service
	(*Field)(nil),                       // 4: Extend.Mock.Options.Field
	(*descriptorpb.FileOptions)(nil),    // 5: google.protobuf.FileOptions
	(*descriptorpb.MethodOptions)(nil),  // 6: google.protobuf.MethodOptions
	(*descriptorpb.MessageOptions)(nil), // 7: google.protobuf.MessageOptions
	(*descriptorpb.ServiceOptions)(nil), // 8: google.protobuf.ServiceOptions
	(*descriptorpb.FieldOptions)(nil),   // 9: google.protobuf.FieldOptions
}
var file_extend_mock_options_annotations_proto_depIdxs = []int32{
	5,  // 0: Extend.Mock.Options.file:extendee -> google.protobuf.FileOptions
	6,  // 1: Extend.Mock.Options.method:extendee -> google.protobuf.MethodOptions
	7,  // 2: Extend.Mock.Options.message:extendee -> google.protobuf.MessageOptions
	8,  // 3: Extend.Mock.Options.service:extendee -> google.protobuf.ServiceOptions
	9,  // 4: Extend.Mock.Options.field:extendee -> google.protobuf.FieldOptions
	0,  // 5: Extend.Mock.Options.file:type_name -> Extend.Mock.Options.File
	1,  // 6: Extend.Mock.Options.method:type_name -> Extend.Mock.Options.Method
	2,  // 7: Extend.Mock.Options.message:type_name -> Extend.Mock.Options.Message
	3,  // 8: Extend.Mock.Options.service:type_name -> Extend.Mock.Options.Service
	4,  // 9: Extend.Mock.Options.field:type_name -> Extend.Mock.Options.Field
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	5,  // [5:10] is the sub-list for extension type_name
	0,  // [0:5] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_extend_mock_options_annotations_proto_init() }
func file_extend_mock_options_annotations_proto_init() {
	if File_extend_mock_options_annotations_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_extend_mock_options_annotations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extend_mock_options_annotations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Method); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extend_mock_options_annotations_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extend_mock_options_annotations_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extend_mock_options_annotations_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extend_mock_options_annotations_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 5,
			NumServices:   0,
		},
		GoTypes:           file_extend_mock_options_annotations_proto_goTypes,
		DependencyIndexes: file_extend_mock_options_annotations_proto_depIdxs,
		MessageInfos:      file_extend_mock_options_annotations_proto_msgTypes,
		ExtensionInfos:    file_extend_mock_options_annotations_proto_extTypes,
	}.Build()
	File_extend_mock_options_annotations_proto = out.File
	file_extend_mock_options_annotations_proto_rawDesc = nil
	file_extend_mock_options_annotations_proto_goTypes = nil
	file_extend_mock_options_annotations_proto_depIdxs = nil
}
